apply plugin: 'groovy'
apply plugin: 'maven'

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()

    // Checkstyle
    // Android Lint depends on different Guava
    // PMD depends on conflicting SAXON classes.
    implementation('com.puppycrawl.tools:checkstyle:8.10.1') {
        exclude module: 'guava'
        exclude module: 'Saxon-HE'
    }

    // FindBugs
    implementation 'com.google.code.findbugs:findbugs:3.0.1'

    // PMD
    implementation 'net.sourceforge.pmd:pmd-java:6.3.0'
}

group = 'com.noveogroup.android'
version = '1.2.6'
description = 'Static code analysis plugin for Android project.'

task wrapper(type: Wrapper) {
    group 'Build Setup'
    description 'Initializes Gradle Wrapper.'
    gradleVersion = '4.7'
}

project.ext {
    plugin = 'com.noveogroup.android.check'
    name = 'Android Check Plugin'
    website = 'https://github.com/noveogroup/android-check'
    scm = 'https://github.com/noveogroup/android-check'
    pom = {
        licenses {
            license {
                name 'The MIT License (MIT)'
                url 'http://opensource.org/licenses/MIT'
                distribution 'repo'
            }
        }
        scm {
            url project.ext.scm
            connection 'scm:git@github.com:noveogroup/android-check.git'
            developerConnection 'scm:git@github.com:noveogroup/android-check.git'
        }
        issueManagement {
            system 'GitHub'
            url 'https://github.com/noveogroup/android-check/issues'
        }
        developers {
            developer {
                name 'Pavel Stepanov'
                url 'https://github.com/stefan-nsk'
                roles {
                    role 'architect'
                    role 'developer'
                }
            }
            developer {
                name 'Sergey Malichenko'
                url 'https://github.com/smalichenko'
                roles {
                    role 'developer'
                }
            }
        }
    }
    bintray = {
        user = project.hasProperty('bintray.user') ? project['bintray.user'] : 'anonymous'
        key = project.hasProperty('bintray.key') ? project['bintray.key'] : 'api-key'
        repo = 'android-check'
        tags = ['android', 'plugin', 'check']
        licenses = ['MIT']
        issueTracker = 'https://github.com/noveogroup/android-check/issues'
        vcs = 'https://github.com/noveogroup/android-check'
        dryRun = false  // whether to run this as dry-run, without deploying
        publish = false // if version should be auto published after an upload
    }
}

apply from: rootProject.file('gradle/gradle-publish.gradle')
apply from: rootProject.file('gradle/publish.gradle')
